// Code generated by protoc-gen-go.
// source: organization.proto
// DO NOT EDIT!

package identity

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CertificateStatus int32

const (
	CertificateStatus_ACTIVE  CertificateStatus = 0
	CertificateStatus_EXPIRED CertificateStatus = 1
	CertificateStatus_BLOCKED CertificateStatus = 2
)

var CertificateStatus_name = map[int32]string{
	0: "ACTIVE",
	1: "EXPIRED",
	2: "BLOCKED",
}
var CertificateStatus_value = map[string]int32{
	"ACTIVE":  0,
	"EXPIRED": 1,
	"BLOCKED": 2,
}

func (x CertificateStatus) String() string {
	return proto.EnumName(CertificateStatus_name, int32(x))
}
func (CertificateStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type AutoValidationMechanism int32

const (
	AutoValidationMechanism_UNKNOWN AutoValidationMechanism = 0
	AutoValidationMechanism_NONE    AutoValidationMechanism = 1
	AutoValidationMechanism_DNS     AutoValidationMechanism = 2
)

var AutoValidationMechanism_name = map[int32]string{
	0: "UNKNOWN",
	1: "NONE",
	2: "DNS",
}
var AutoValidationMechanism_value = map[string]int32{
	"UNKNOWN": 0,
	"NONE":    1,
	"DNS":     2,
}

func (x AutoValidationMechanism) String() string {
	return proto.EnumName(AutoValidationMechanism_name, int32(x))
}
func (AutoValidationMechanism) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

type Role int32

const (
	Role_CUSTOMER           Role = 0
	Role_ADMIN              Role = 1
	Role_TEAM_LEAD          Role = 2
	Role_KYC_ANALYST        Role = 3
	Role_COMPLIANCE_OFFICER Role = 4
	Role_AUDITOR            Role = 5
	Role_REQUESTING_BANK    Role = 6
)

var Role_name = map[int32]string{
	0: "CUSTOMER",
	1: "ADMIN",
	2: "TEAM_LEAD",
	3: "KYC_ANALYST",
	4: "COMPLIANCE_OFFICER",
	5: "AUDITOR",
	6: "REQUESTING_BANK",
}
var Role_value = map[string]int32{
	"CUSTOMER":           0,
	"ADMIN":              1,
	"TEAM_LEAD":          2,
	"KYC_ANALYST":        3,
	"COMPLIANCE_OFFICER": 4,
	"AUDITOR":            5,
	"REQUESTING_BANK":    6,
}

func (x Role) String() string {
	return proto.EnumName(Role_name, int32(x))
}
func (Role) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

type Organization struct {
	DomainName    string               `protobuf:"bytes,1,opt,name=domain_name,json=domainName" json:"domain_name,omitempty"`
	PrimaryCertId string               `protobuf:"bytes,2,opt,name=primary_cert_id,json=primaryCertId" json:"primary_cert_id,omitempty"`
	ActiveCerts   []*SignedCertificate `protobuf:"bytes,3,rep,name=active_certs,json=activeCerts" json:"active_certs,omitempty"`
	ExpiredCerts  []*SignedCertificate `protobuf:"bytes,4,rep,name=expired_certs,json=expiredCerts" json:"expired_certs,omitempty"`
	BlockedCerts  []*SignedCertificate `protobuf:"bytes,5,rep,name=blocked_certs,json=blockedCerts" json:"blocked_certs,omitempty"`
}

func (m *Organization) Reset()                    { *m = Organization{} }
func (m *Organization) String() string            { return proto.CompactTextString(m) }
func (*Organization) ProtoMessage()               {}
func (*Organization) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Organization) GetDomainName() string {
	if m != nil {
		return m.DomainName
	}
	return ""
}

func (m *Organization) GetPrimaryCertId() string {
	if m != nil {
		return m.PrimaryCertId
	}
	return ""
}

func (m *Organization) GetActiveCerts() []*SignedCertificate {
	if m != nil {
		return m.ActiveCerts
	}
	return nil
}

func (m *Organization) GetExpiredCerts() []*SignedCertificate {
	if m != nil {
		return m.ExpiredCerts
	}
	return nil
}

func (m *Organization) GetBlockedCerts() []*SignedCertificate {
	if m != nil {
		return m.BlockedCerts
	}
	return nil
}

type SignedCertificate struct {
	Id             string                  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Status         CertificateStatus       `protobuf:"varint,2,opt,name=status,enum=identity.proto.CertificateStatus" json:"status,omitempty"`
	CreatedAt      uint64                  `protobuf:"varint,3,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	ExpiredAt      uint64                  `protobuf:"varint,4,opt,name=expired_at,json=expiredAt" json:"expired_at,omitempty"`
	AutoValidation AutoValidationMechanism `protobuf:"varint,5,opt,name=auto_validation,json=autoValidation,enum=identity.proto.AutoValidationMechanism" json:"auto_validation,omitempty"`
	Data           *CertificateData        `protobuf:"bytes,6,opt,name=data" json:"data,omitempty"`
	SelfSign       *Signature              `protobuf:"bytes,7,opt,name=self_sign,json=selfSign" json:"self_sign,omitempty"`
	Validations    []*Signature            `protobuf:"bytes,8,rep,name=validations" json:"validations,omitempty"`
}

func (m *SignedCertificate) Reset()                    { *m = SignedCertificate{} }
func (m *SignedCertificate) String() string            { return proto.CompactTextString(m) }
func (*SignedCertificate) ProtoMessage()               {}
func (*SignedCertificate) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *SignedCertificate) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SignedCertificate) GetStatus() CertificateStatus {
	if m != nil {
		return m.Status
	}
	return CertificateStatus_ACTIVE
}

func (m *SignedCertificate) GetCreatedAt() uint64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *SignedCertificate) GetExpiredAt() uint64 {
	if m != nil {
		return m.ExpiredAt
	}
	return 0
}

func (m *SignedCertificate) GetAutoValidation() AutoValidationMechanism {
	if m != nil {
		return m.AutoValidation
	}
	return AutoValidationMechanism_UNKNOWN
}

func (m *SignedCertificate) GetData() *CertificateData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SignedCertificate) GetSelfSign() *Signature {
	if m != nil {
		return m.SelfSign
	}
	return nil
}

func (m *SignedCertificate) GetValidations() []*Signature {
	if m != nil {
		return m.Validations
	}
	return nil
}

type CertificateData struct {
	DomainName string               `protobuf:"bytes,1,opt,name=domain_name,json=domainName" json:"domain_name,omitempty"`
	OrgDetails *OrganizationDetails `protobuf:"bytes,2,opt,name=org_details,json=orgDetails" json:"org_details,omitempty"`
	PublicKey  *PublicKey           `protobuf:"bytes,3,opt,name=public_key,json=publicKey" json:"public_key,omitempty"`
	Role       Role                 `protobuf:"varint,4,opt,name=role,enum=identity.proto.Role" json:"role,omitempty"`
}

func (m *CertificateData) Reset()                    { *m = CertificateData{} }
func (m *CertificateData) String() string            { return proto.CompactTextString(m) }
func (*CertificateData) ProtoMessage()               {}
func (*CertificateData) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *CertificateData) GetDomainName() string {
	if m != nil {
		return m.DomainName
	}
	return ""
}

func (m *CertificateData) GetOrgDetails() *OrganizationDetails {
	if m != nil {
		return m.OrgDetails
	}
	return nil
}

func (m *CertificateData) GetPublicKey() *PublicKey {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *CertificateData) GetRole() Role {
	if m != nil {
		return m.Role
	}
	return Role_CUSTOMER
}

type OrganizationDetails struct {
	Name    string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Email   string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Country string `protobuf:"bytes,3,opt,name=country" json:"country,omitempty"`
}

func (m *OrganizationDetails) Reset()                    { *m = OrganizationDetails{} }
func (m *OrganizationDetails) String() string            { return proto.CompactTextString(m) }
func (*OrganizationDetails) ProtoMessage()               {}
func (*OrganizationDetails) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *OrganizationDetails) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OrganizationDetails) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *OrganizationDetails) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func init() {
	proto.RegisterType((*Organization)(nil), "identity.proto.Organization")
	proto.RegisterType((*SignedCertificate)(nil), "identity.proto.SignedCertificate")
	proto.RegisterType((*CertificateData)(nil), "identity.proto.CertificateData")
	proto.RegisterType((*OrganizationDetails)(nil), "identity.proto.OrganizationDetails")
	proto.RegisterEnum("identity.proto.CertificateStatus", CertificateStatus_name, CertificateStatus_value)
	proto.RegisterEnum("identity.proto.AutoValidationMechanism", AutoValidationMechanism_name, AutoValidationMechanism_value)
	proto.RegisterEnum("identity.proto.Role", Role_name, Role_value)
}

func init() { proto.RegisterFile("organization.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 707 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x53, 0xdd, 0x8e, 0xdb, 0x44,
	0x14, 0x5e, 0x27, 0xce, 0xdf, 0x71, 0x36, 0x71, 0xa7, 0x15, 0x18, 0x24, 0xb4, 0x21, 0x48, 0x10,
	0xad, 0x44, 0x2e, 0x52, 0x09, 0xb1, 0xe2, 0xca, 0x6b, 0x7b, 0x91, 0x95, 0xc4, 0x0e, 0x93, 0xa4,
	0xb0, 0xdc, 0x58, 0x13, 0x7b, 0x9a, 0x8e, 0x6a, 0x7b, 0x22, 0x7b, 0x52, 0x11, 0x9e, 0x84, 0x97,
	0xe0, 0x8d, 0x78, 0x18, 0xe4, 0xb1, 0xb3, 0xa4, 0xd9, 0xa5, 0xed, 0xdd, 0x9c, 0xef, 0x7c, 0xdf,
	0x99, 0x6f, 0xce, 0x39, 0x03, 0x88, 0x67, 0x5b, 0x92, 0xb2, 0x3f, 0x89, 0x60, 0x3c, 0x1d, 0xef,
	0x32, 0x2e, 0x38, 0xea, 0xb1, 0x88, 0xa6, 0x82, 0x89, 0x43, 0x19, 0x7f, 0xd9, 0x0d, 0x79, 0x92,
	0x1c, 0xb3, 0xc3, 0xbf, 0x6b, 0xd0, 0xf5, 0x4f, 0x44, 0xe8, 0x0a, 0xb4, 0x88, 0x27, 0x84, 0xa5,
	0x41, 0x4a, 0x12, 0x6a, 0x28, 0x03, 0x65, 0xd4, 0xc1, 0x50, 0x42, 0x1e, 0x49, 0x28, 0xfa, 0x16,
	0xfa, 0xbb, 0x8c, 0x25, 0x24, 0x3b, 0x04, 0x21, 0xcd, 0x44, 0xc0, 0x22, 0xa3, 0x26, 0x49, 0x97,
	0x15, 0x6c, 0xd1, 0x4c, 0xb8, 0x11, 0xb2, 0xa1, 0x4b, 0x42, 0xc1, 0xde, 0x51, 0x49, 0xcb, 0x8d,
	0xfa, 0xa0, 0x3e, 0xd2, 0x26, 0x5f, 0x8f, 0xdf, 0xb7, 0x33, 0x5e, 0xb2, 0x6d, 0x4a, 0xa3, 0x42,
	0xc3, 0x5e, 0xb3, 0x90, 0x08, 0x8a, 0xb5, 0x52, 0x56, 0x40, 0x39, 0xba, 0x83, 0x4b, 0xfa, 0xc7,
	0x8e, 0x65, 0x34, 0xaa, 0xca, 0xa8, 0x9f, 0x5a, 0xa6, 0x5b, 0xe9, 0x1e, 0xea, 0x6c, 0x62, 0x1e,
	0xbe, 0x7d, 0xa8, 0xd3, 0xf8, 0xe4, 0x3a, 0x95, 0x4e, 0xd6, 0x19, 0xfe, 0x55, 0x87, 0x67, 0x8f,
	0x38, 0xa8, 0x07, 0x35, 0x16, 0x55, 0xbd, 0xaa, 0xb1, 0x08, 0xdd, 0x40, 0x33, 0x17, 0x44, 0xec,
	0x73, 0xd9, 0x9a, 0xde, 0xe3, 0x6b, 0x4e, 0xc4, 0x4b, 0x49, 0xc4, 0x95, 0x00, 0x7d, 0x05, 0x10,
	0x66, 0x94, 0x08, 0x1a, 0x05, 0x44, 0x18, 0xf5, 0x81, 0x32, 0x52, 0x71, 0xa7, 0x42, 0x4c, 0x51,
	0xa4, 0x8f, 0xfd, 0x20, 0xc2, 0x50, 0xcb, 0x74, 0x85, 0x98, 0x02, 0x2d, 0xa0, 0x4f, 0xf6, 0x82,
	0x07, 0xef, 0x48, 0xcc, 0x22, 0x39, 0x50, 0xa3, 0x21, 0x1d, 0x7c, 0x77, 0xee, 0xc0, 0xdc, 0x0b,
	0xfe, 0xea, 0x81, 0x35, 0xa7, 0xe1, 0x1b, 0x92, 0xb2, 0x3c, 0xc1, 0x3d, 0xf2, 0x5e, 0x02, 0xbd,
	0x04, 0x35, 0x22, 0x82, 0x18, 0xcd, 0x81, 0x32, 0xd2, 0x26, 0x57, 0x1f, 0x78, 0x88, 0x4d, 0x04,
	0xc1, 0x92, 0x8c, 0x7e, 0x80, 0x4e, 0x4e, 0xe3, 0xd7, 0x41, 0xce, 0xb6, 0xa9, 0xd1, 0x92, 0xca,
	0x2f, 0x9e, 0xea, 0x34, 0x11, 0xfb, 0x8c, 0xe2, 0x76, 0xc1, 0x2d, 0x42, 0xf4, 0x13, 0x68, 0xff,
	0x39, 0xcf, 0x8d, 0xb6, 0x9c, 0xd1, 0x07, 0x94, 0xa7, 0xec, 0xe1, 0x3f, 0x0a, 0xf4, 0xcf, 0xec,
	0x7c, 0x7c, 0x9b, 0x6d, 0xd0, 0x78, 0xb6, 0x0d, 0x22, 0x2a, 0x08, 0x8b, 0xcb, 0x71, 0x69, 0x93,
	0x6f, 0xce, 0x6f, 0x3c, 0xfd, 0x21, 0x76, 0x49, 0xc5, 0xc0, 0xb3, 0x6d, 0x75, 0x46, 0x3f, 0x02,
	0xec, 0xf6, 0x9b, 0x98, 0x85, 0xc1, 0x5b, 0x7a, 0x90, 0x43, 0x7b, 0xc2, 0xf6, 0x42, 0x32, 0xa6,
	0xf4, 0x80, 0x3b, 0xbb, 0xe3, 0x11, 0x8d, 0x40, 0xcd, 0x78, 0x4c, 0xe5, 0x24, 0x7b, 0x93, 0x17,
	0xe7, 0x1a, 0xcc, 0x63, 0x8a, 0x25, 0x63, 0x78, 0x0f, 0xcf, 0x9f, 0xb0, 0x81, 0x10, 0xa8, 0x27,
	0x4f, 0x93, 0x67, 0xf4, 0x02, 0x1a, 0x34, 0x21, 0x2c, 0xae, 0x3e, 0x66, 0x19, 0x20, 0x03, 0x5a,
	0x21, 0xdf, 0xa7, 0x22, 0x2b, 0x1d, 0x76, 0xf0, 0x31, 0xbc, 0xbe, 0x81, 0x67, 0x8f, 0x16, 0x12,
	0x01, 0x34, 0x4d, 0x6b, 0xe5, 0xbe, 0x72, 0xf4, 0x0b, 0xa4, 0x41, 0xcb, 0xf9, 0x6d, 0xe1, 0x62,
	0xc7, 0xd6, 0x95, 0x22, 0xb8, 0x9d, 0xf9, 0xd6, 0xd4, 0xb1, 0xf5, 0xda, 0xf5, 0x0d, 0x7c, 0xfe,
	0x3f, 0x9b, 0x54, 0xf0, 0xd6, 0xde, 0xd4, 0xf3, 0x7f, 0xf5, 0xf4, 0x0b, 0xd4, 0x06, 0xd5, 0xf3,
	0x3d, 0x47, 0x57, 0x50, 0x0b, 0xea, 0xb6, 0xb7, 0xd4, 0x6b, 0xd7, 0x07, 0x50, 0x8b, 0xe7, 0xa1,
	0x2e, 0xb4, 0xad, 0xf5, 0x72, 0xe5, 0xcf, 0x1d, 0xac, 0x5f, 0xa0, 0x0e, 0x34, 0x4c, 0x7b, 0xee,
	0x7a, 0xba, 0x82, 0x2e, 0xa1, 0xb3, 0x72, 0xcc, 0x79, 0x30, 0x73, 0x4c, 0x5b, 0xaf, 0xa1, 0x3e,
	0x68, 0xd3, 0x7b, 0x2b, 0x30, 0x3d, 0x73, 0x76, 0xbf, 0x5c, 0xe9, 0x75, 0xf4, 0x19, 0x20, 0xcb,
	0x9f, 0x2f, 0x66, 0xae, 0xe9, 0x59, 0x4e, 0xe0, 0xdf, 0xdd, 0xb9, 0x96, 0x83, 0x75, 0xb5, 0xb8,
	0xd8, 0x5c, 0xdb, 0xee, 0xca, 0xc7, 0x7a, 0x03, 0x3d, 0x87, 0x3e, 0x76, 0x7e, 0x59, 0x3b, 0xcb,
	0x95, 0xeb, 0xfd, 0x1c, 0xdc, 0x9a, 0xde, 0x54, 0x6f, 0xde, 0x7e, 0x0f, 0x57, 0x21, 0x4f, 0xc6,
	0xbb, 0x9c, 0xed, 0xde, 0xb0, 0x6d, 0xcc, 0x37, 0x24, 0x3e, 0xeb, 0xfc, 0x42, 0xf9, 0xbd, 0x7d,
	0x44, 0x36, 0x4d, 0x09, 0xbd, 0xfc, 0x37, 0x00, 0x00, 0xff, 0xff, 0x02, 0xd2, 0xfe, 0x4e, 0x5f,
	0x05, 0x00, 0x00,
}
